/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://testwebpack/./src/styles.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n// import { internalIP } from 'webpack-dev-server';\n\n\nconst keyboardLanguage = localStorage.getItem('language') || 'english';\n\nconst container = document.createElement('div');\nconst headerText = document.createElement('h1');\nconst textarea = document.createElement('textarea');\nconst containerKeyboard = document.createElement('div');\nlet capsLockSwich = true;\nlet cursorPosition = 0;\nlet onLang = true;\nlet onShift = true;\nlet isRightShift = false;\ntextarea.addEventListener('click', () => {\n  cursorPosition = textarea.selectionStart;\n});\ncontainer.classList.add('container');\ndocument.body.appendChild(container);\n\nheaderText.innerText = 'Virtual Keyboard';\ncontainer.appendChild(headerText);\n\ntextarea.setAttribute('rows', 15);\ncontainer.appendChild(textarea);\n\ncontainerKeyboard.classList.add('containerKeyboard');\ncontainer.appendChild(containerKeyboard);\n\nconst keyboard = [[96, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 61], [113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 91, 93, 92], [97, 115, 100, 102, 103, 104, 106, 107, 108, 59, 39], [122, 120, 99, 118, 98, 110, 109, 44, 46, 47]];\nconst upperKeyboard = [[96, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 61], [81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 91, 93, 92], [83, 68, 70, 71, 72, 74, 75, 76, 108, 59, 39], [90, 88, 67, 86, 66, 78, 77, 44, 46, 47]];\nconst upperRusKeyboard = [[1025, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 61], [1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1061, 1066, 92], [1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1046, 1069], [1071, 1063, 1057, 1052, 1048, 1058, 1068, 1041, 1070, 46]];\nconst rusKeyboard = [[1105, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 61], [1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1093, 1098, 92], [1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1078, 1101], [1103, 1095, 1089, 1084, 1080, 1090, 1100, 1073, 1102, 46]];\nconst upperKeyboardShift = [[1156, 33, 64, 35, 36, 37, 94, 38, 42, 40, 41, 45, 43], [81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 123, 125, 47], [83, 68, 70, 71, 72, 74, 75, 76, 108, 58, 34], [90, 88, 67, 86, 66, 78, 77, 60, 62, 63]];\nconst upperRusKeyboardShift = [[1025, 33, 34, 8470, 59, 37, 58, 63, 42, 40, 41, 45, 43], [1049, 1062, 1059, 1050, 1045, 1053, 1043, 1064, 1065, 1047, 1061, 1066, 47], [1060, 1067, 1042, 1040, 1055, 1056, 1054, 1051, 1044, 1046, 1069], [1071, 1063, 1057, 1052, 1048, 1058, 1068, 1041, 1070, 39]];\nconst rusKeyboardShift = [[1105, 33, 34, 8470, 59, 37, 58, 63, 42, 40, 41, 45, 43], [1081, 1094, 1091, 1082, 1077, 1085, 1075, 1096, 1097, 1079, 1093, 1098, 92], [1092, 1099, 1074, 1072, 1087, 1088, 1086, 1083, 1076, 1078, 1101], [1103, 1095, 1089, 1084, 1080, 1090, 1100, 1073, 1102, 39]];\nconst keyboardShift = [[1156, 33, 64, 35, 36, 37, 94, 38, 42, 40, 41, 45, 43], [113, 119, 101, 114, 116, 121, 117, 105, 111, 112, 123, 125, 47], [97, 115, 100, 102, 103, 104, 106, 107, 108, 58, 34], [122, 120, 99, 118, 98, 110, 109, 60, 62, 63]];\n\nfunction addChar(char) {\n  const text = textarea.value;\n  textarea.value = text.substring(0, cursorPosition) + char + text.substring(cursorPosition, text.length);\n  cursorPosition += 1;\n}\n\nconst infText = document.createElement('h4');\ninfText.innerText = 'Virtual keyboard created in Window OS';\ncontainer.appendChild(infText);\nconst infLang = document.createElement('h4');\ninfLang.innerText = 'Press Ctrl+Alt to change language';\ncontainer.appendChild(infLang);\n\nfunction creatKeyboard(dictionary) {\n  containerKeyboard.innerHTML = '';\n  for (let i = 0; i < dictionary.length; i += 1) {\n    const keyRow = document.createElement('div');\n    keyRow.classList.add('keyRow');\n    containerKeyboard.appendChild(keyRow);\n\n    for (let j = 0; j < dictionary[i].length; j += 1) {\n      const key = document.createElement('div');\n      key.classList.add('key');\n      key.setAttribute('data', dictionary[i][j]);\n\n      key.innerText = String.fromCharCode(dictionary[i][j]);\n      keyRow.appendChild(key);\n\n      key.onmousedown = () => {\n        addChar(key.textContent);\n      };\n\n      key.onmouseup = () => {\n        key.classList.remove('active');\n      };\n    }\n  }\n  createSpecialKeys();\n}\n\nif (keyboardLanguage === 'english') {\n  creatKeyboard(keyboard);\n} else {\n  creatKeyboard(rusKeyboard);\n}\n\nfunction switchShift() {\n  onShift = !onShift;\n  if (onShift) {\n    if (onLang) {\n      if (capsLockSwich) {\n        creatKeyboard(keyboard);\n      } else {\n        creatKeyboard(upperKeyboard);\n      }\n    } else if (capsLockSwich) {\n      creatKeyboard(rusKeyboard);\n    } else {\n      creatKeyboard(upperRusKeyboard);\n    }\n  } else if (onLang) {\n    if (capsLockSwich) {\n      creatKeyboard(upperKeyboardShift);\n    } else {\n      creatKeyboard(keyboardShift);\n    }\n  } else if (capsLockSwich) {\n    creatKeyboard(upperRusKeyboardShift);\n  } else {\n    creatKeyboard(rusKeyboardShift);\n  }\n}\n\ndocument.onkeyup = (event) => {\n  document.querySelectorAll('.key').forEach((element) => {\n    element.classList.remove('active');\n  });\n\n  if (event.code === 'ShiftLeft') {\n    switchShift();\n  }\n  if (event.code === 'ShiftRight') {\n    isRightShift = false;\n    switchShift();\n  }\n  return event;\n};\n\nfunction switchCase() {\n  capsLockSwich = !capsLockSwich;\n  if (capsLockSwich) {\n    if (onLang) {\n      creatKeyboard(keyboard);\n    } else {\n      creatKeyboard(rusKeyboard);\n    }\n  } else if (onLang) {\n    creatKeyboard(upperKeyboard);\n  } else {\n    creatKeyboard(upperRusKeyboard);\n  }\n}\n\nfunction switchLanguage() {\n  onLang = !onLang;\n  if (onLang) {\n    localStorage.setItem('language', 'english');\n    if (capsLockSwich) {\n      creatKeyboard(keyboard);\n    } else {\n      creatKeyboard(upperKeyboard);\n    }\n  } else {\n    localStorage.setItem('language', 'russian');\n    if (capsLockSwich) {\n      creatKeyboard(rusKeyboard);\n    } else {\n      creatKeyboard(upperRusKeyboard);\n    }\n  }\n}\n\nfunction createSpecialKeys() {\n  const backspace = document.createElement('div');\n  backspace.classList.add('key');\n  backspace.classList.add('specialButton');\n  backspace.classList.add('mouseActive');\n  backspace.innerText = 'Backspace';\n  document.getElementsByClassName('keyRow')[0].appendChild(backspace);\n\n  const tab = document.createElement('div');\n  tab.classList.add('key');\n  tab.classList.add('specialButton');\n  tab.classList.add('mouseActive');\n  tab.innerText = 'Tab';\n  document.getElementsByClassName('keyRow')[1].prepend(tab);\n\n  const del = document.createElement('div');\n  del.classList.add('key');\n  del.classList.add('specialButton');\n  del.classList.add('mouseActive');\n  del.innerText = 'Del';\n  document.getElementsByClassName('keyRow')[1].appendChild(del);\n\n  const capsLock = document.createElement('div');\n  capsLock.classList.add('key');\n  capsLock.classList.add('specialButton');\n  if (capsLockSwich) {\n    capsLock.classList.toggle('capsLk');\n  }\n  capsLock.classList.toggle('capsLk');\n  capsLock.classList.add('mouseActive');\n  capsLock.innerText = 'CapsLock';\n  document.getElementsByClassName('keyRow')[2].prepend(capsLock);\n\n  const enter = document.createElement('div');\n  enter.classList.add('key');\n  enter.classList.add('specialButton');\n  enter.classList.add('mouseActive');\n  enter.innerText = 'Enter';\n  document.getElementsByClassName('keyRow')[2].appendChild(enter);\n\n  const shiftLeft = document.createElement('div');\n  shiftLeft.classList.add('key');\n  shiftLeft.classList.add('specialButton');\n\n  if (!onShift && !isRightShift) {\n    shiftLeft.classList.toggle('capsLk');\n  }\n\n  shiftLeft.classList.add('mouseActive');\n  shiftLeft.innerText = 'Shift';\n  document.getElementsByClassName('keyRow')[3].prepend(shiftLeft);\n\n  const arrowTopContainer = document.createElement('div');\n  arrowTopContainer.classList.add('key');\n  arrowTopContainer.classList.add('arrowContainer');\n  arrowTopContainer.classList.add('mouseActive');\n  const arrowTop = document.createElement('div');\n  arrowTop.classList.add('treangle_top');\n  arrowTopContainer.appendChild(arrowTop);\n  document.getElementsByClassName('keyRow')[3].appendChild(arrowTopContainer);\n\n  const shiftRight = document.createElement('div');\n  shiftRight.classList.add('key');\n  shiftRight.classList.add('specialButton');\n  if (!onShift && isRightShift) {\n    shiftRight.classList.toggle('capsLk');\n  }\n  shiftRight.classList.add('mouseActive');\n  shiftRight.innerText = 'Shift';\n  document.getElementsByClassName('keyRow')[3].appendChild(shiftRight);\n\n  const keyRow = document.createElement('div');\n  keyRow.classList.add('keyRow');\n  const keyLeftcontainer = document.createElement('div');\n  keyLeftcontainer.classList.add('keyRow');\n  const ctrlLeft = document.createElement('div');\n  ctrlLeft.classList.add('key');\n  ctrlLeft.classList.add('specialButton');\n  ctrlLeft.classList.add('mouseActive');\n  ctrlLeft.innerText = 'Ctrl';\n  const win = document.createElement('div');\n  win.classList.add('key');\n  win.classList.add('specialButton');\n  win.classList.add('mouseActive');\n  win.innerText = 'Win';\n  const altLeft = document.createElement('div');\n  altLeft.classList.add('key');\n  altLeft.classList.add('specialButton');\n\n  altLeft.classList.add('mouseActive');\n  altLeft.innerText = 'Alt';\n\n  keyLeftcontainer.appendChild(ctrlLeft);\n  keyLeftcontainer.appendChild(win);\n  keyLeftcontainer.appendChild(altLeft);\n\n  const space = document.createElement('div');\n  space.classList.add('key');\n  space.classList.add('specialButton');\n  space.classList.add('mouseActive');\n\n  const keyRightcontainer = document.createElement('div');\n  keyRightcontainer.classList.add('keyRow');\n\n  const altRight = document.createElement('div');\n  altRight.classList.add('key');\n  altRight.classList.add('specialButton');\n  altRight.classList.add('mouseActive');\n  altRight.innerText = 'Alt';\n\n  const arrowLeftContainer = document.createElement('div');\n  arrowLeftContainer.classList.add('key');\n  arrowLeftContainer.classList.add('arrowContainer');\n  arrowLeftContainer.classList.add('mouseActive');\n  const arrowLeft = document.createElement('div');\n  arrowLeft.classList.add('treangle_left');\n  arrowLeftContainer.appendChild(arrowLeft);\n\n  const arrowBottomContainer = document.createElement('div');\n  arrowBottomContainer.classList.add('key');\n  arrowBottomContainer.classList.add('arrowContainer');\n  arrowBottomContainer.classList.add('mouseActive');\n  const arrowBottom = document.createElement('div');\n  arrowBottom.classList.add('treangle_bottom');\n  arrowBottomContainer.appendChild(arrowBottom);\n\n  const arrowRightContainer = document.createElement('div');\n  arrowRightContainer.classList.add('key');\n  arrowRightContainer.classList.add('arrowContainer');\n  arrowRightContainer.classList.add('mouseActive');\n  const arrowRight = document.createElement('div');\n  arrowRight.classList.add('treangle_right');\n  arrowRightContainer.appendChild(arrowRight);\n\n  const ctrlRight = document.createElement('div');\n  ctrlRight.classList.add('key');\n  ctrlRight.classList.add('specialButton');\n  ctrlRight.classList.add('mouseActive');\n  ctrlRight.innerText = 'Ctrl';\n\n  keyRightcontainer.appendChild(altRight);\n  keyRightcontainer.appendChild(arrowLeftContainer);\n  keyRightcontainer.appendChild(arrowBottomContainer);\n  keyRightcontainer.appendChild(arrowRightContainer);\n  keyRightcontainer.appendChild(ctrlRight);\n\n  keyRow.appendChild(keyLeftcontainer);\n  keyRow.appendChild(space);\n  keyRow.appendChild(keyRightcontainer);\n\n  containerKeyboard.appendChild(keyRow);\n\n  document.onkeydown = (event) => {\n    event.preventDefault();\n    const text = textarea.value;\n\n    if (event.altKey && event.ctrlKey) {\n      switchLanguage();\n    }\n\n    switch (event.code) {\n      case 'Backspace':\n        backspace.classList.add('active');\n        textarea.value = text.substring(0, cursorPosition - 1) + text.substring(cursorPosition, text.length);\n        if (cursorPosition) {\n          cursorPosition -= 1;\n        }\n        break;\n      case 'Tab':\n        tab.classList.add('active');\n        addChar('\\t');\n        break;\n      case 'Enter':\n        enter.classList.add('active');\n        addChar('\\n');\n        break;\n      case 'ShiftLeft':\n        shiftLeft.classList.toggle('capsLk');\n        switchShift();\n        break;\n      case 'ShiftRight':\n        shiftRight.classList.toggle('capsLk');\n        isRightShift = true;\n        switchShift();\n        break;\n      case 'ControlLeft':\n        ctrlLeft.classList.add('active');\n        break;\n      case 'ControlRight':\n        ctrlRight.classList.add('active');\n        break;\n      case 'AltLeft':\n        altLeft.classList.add('active');\n        break;\n      case 'AltRight':\n        altRight.classList.add('active');\n        break;\n      case 'CapsLock':\n        capsLock.classList.add('active');\n        switchCase();\n        break;\n      case 'Space':\n        space.classList.add('active');\n        addChar(' ');\n        break;\n      case 'ArrowLeft':\n        arrowLeftContainer.classList.add('active');\n        addChar('\\u2190');\n        break;\n      case 'ArrowUp':\n        arrowTopContainer.classList.add('active');\n        addChar('\\u2191');\n        break;\n      case 'ArrowRight':\n        arrowRightContainer.classList.add('active');\n        addChar('\\u2192');\n        break;\n      case 'ArrowDown':\n        arrowBottomContainer.classList.add('active');\n        addChar('\\u2193');\n        break;\n      case 'Delete':\n        del.classList.add('active');\n        textarea.value = text.substring(0, cursorPosition) + text.substring(cursorPosition + 1, text.length);\n        break;\n      case 'MetaLeft':\n        win.classList.add('active');\n        break;\n      default:\n        if (document.querySelector(`.key[data=\"${event.key.charCodeAt()}\"]`)) {\n          document.querySelector(`.key[data=\"${event.key.charCodeAt()}\"]`).classList.add('active');\n          addChar(event.key);\n        }\n    }\n    textarea.setSelectionRange(cursorPosition, cursorPosition);\n  };\n\n  const mouseActive = Array.from(document.getElementsByClassName('mouseActive'));\n  mouseActive.forEach((e) => {\n    e.onmousedown = () => {\n      e.classList.add('active');\n      const text = textarea.value;\n\n      if (e === backspace) {\n        textarea.value = text.substring(0, cursorPosition - 1) + text.substring(cursorPosition, text.length);\n        if (cursorPosition) {\n          cursorPosition -= 1;\n        }\n      } else if (e === capsLock) {\n        switchCase();\n      } else if (e === space) {\n        cursorPosition += 1;\n        addChar(' ');\n      } else if (e === del) {\n        textarea.value = text.substring(0, cursorPosition) + text.substring(cursorPosition + 1, text.length);\n      } else if (e === arrowLeftContainer) {\n        cursorPosition += 1;\n        addChar('\\u2190');\n      } else if (e === arrowRightContainer) {\n        cursorPosition += 1;\n        addChar('\\u2192');\n      } else if (e === arrowTopContainer) {\n        cursorPosition += 1;\n        addChar('\\u2191');\n      } else if (e === arrowBottomContainer) {\n        cursorPosition += 1;\n        addChar('\\u2193');\n      } else if (e === enter) {\n        cursorPosition += 1;\n        addChar('\\n');\n      } else if (e === tab) {\n        cursorPosition += 1;\n        addChar('\\t');\n      } else if (e === shiftLeft) {\n        switchShift();\n      } else if (e === shiftRight) {\n        isRightShift = true;\n        switchShift();\n      }\n    };\n    e.onmouseup = () => {\n      if (e === shiftLeft) {\n        switchShift();\n      }\n      if (e === shiftRight) {\n        isRightShift = false;\n        switchShift();\n      }\n      e.classList.remove('active');\n    };\n  });\n}\n\n\n//# sourceURL=webpack://testwebpack/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;